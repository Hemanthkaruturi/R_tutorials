as.integer(y)
y
as.integer(y)
z <- 'Hemanth'
z
z[1]
z[2]
typeof(z)
z <- 'Welcome \string'
z <- 'Welcome \ string'
z <- 'welcome \n string'
z <- 'welcome \s string'
z <- 'welcome \n string'
z
toupper(z)
tolower(z)
str <- 'Welcome to R programming'
gsub('programming','scripting',str)
str1 <- 'It is very interesting'
str + str1
paste(str + str1)
paste(str,str1)
paste(str,str1, sep = ",")
paste(str,str1, sep = ", ")
cat(str,str1)
typeof(paste(str,str1, sep = ", "))
type(cat(str,str1))
typeof(cat(str,str1))
class(x)
class(y)
class(z)
substr(str,1,4)
substr(str,1,47)
substr(str,1,7)
strsplit(str,split="[[:space:]]")
typeof(strsplit(str,split="[[:space:]]"))
strsplit(str,split="[[:space:]]")[1]
strsplit(str,split="[[:space:]]")[[1]]
strsplit(str,split="[[:space:]]")[[1]][1]
strsplit(str,split="[[:space:]]")[[1]]
strsplit(str,split="[[:space:]]")[[1]][1]
strsplit(str,split="[[:space:]]")[[1]][2]
#list
l <- list(1,2,3,4)
l[1]
l[0]
l[2]
l[3]
l[1:3]
l1 <- list(1,1.2,'Hemanth',list(2,3,4,5))
l[1]
typeof(l[1])
class(l[1])
l[1]
typeof(l[[1]])
class(l[[1]])
l1 <- list(1,2,3)
l1
x
l1[1]
l1[[1]]
l1[[1]][1]
l1[[1]]
typeof(l1[[1]])
l1[1]
l1[[1]]
l1[[3]]
l[[3]]
l1[[3]]
l1[1]
l1[[2]]
l1[2]
l1
l1 <- list(1,1.2,'Hemanth',list(2,3,4,5))
l1[[3]]
typeof(l1[[3]])
l[[4]]
l1[[4]]
l1[[4]][[1]]
l1[1:4]
l1 <- list(1,2,3)
l
l + l1
l1 <- list(1,2,3,4)
l + l1
sum(l1)
range(1,2,3,4,5)
list(1:5)
seq(5)
rm(l)
rm(l1)
rm(str,str1,x,y,z)
## Vectors
x <- c(1,2,3,4)
typeof(x)
class(x)
x[1]
x[2]
x <- c('Hemanth','Mahesh','Abhi')
class(x)
x[1]
x <- c(1,2,3,'Nithin')
x
class(x)
v1 <- c(3,2,5)
v <- c(1,2,3)
v + v1
v - v1
x1 <- c('Ravi','Nitesh')
x + x1
v/v1
v[1]
v[1] <- 4
v
arr <- array(1,2,3,4)
arr <- array(c(1,2,3,4))
arr
vec <- c(23,25,32)
arr <- array(vec)
arr
arr_list <- array(list(1,2,3,4))
arr_list
arr_list1 <- array(list(2,2,3,4))
arr_list + arr_list1
vec1 <- c(22,20,32)
arr1 <- array(vec1)
arr + arr1
class(arr)
class(arr_list)
x
library(plotly)
install.packages('installr')
updateR()
library(installr)
updateR()
#set working directory
setwd('C:/Users/600037209/Documents/Classes/R/Material/Rgraphics/Rgraphics')
# install.packages("tidyverse")
library(tidyverse)
install.packages('tidyverse')
# install.packages("tidyverse")
library(tidyverse)
housing <- read_csv("dataSets/landdata-states.csv")
housing <- read_csv("dataSets/landdata-states.csv")
View(housing)
library(ggplot2)
ggplot(housing, aes(x = Home.Value)) +
geom_histogram()
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
ggplot(filter(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
ggplot(filter(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_line()
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = Land.Value)) +
geom_point()
hp2001Q1 <- filter(housing, Date == 2001.25)
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = Land.Value)) +
geom_point()
ggplot(hp2001Q1,
aes(y = Structure.Cost, x = log(Land.Value))) +
geom_point()
hp2001Q1$pred.SC <- predict(lm(Structure.Cost ~ log(Land.Value), data = hp2001Q1))
p1 <- ggplot(hp2001Q1, aes(x = log(Land.Value), y = Structure.Cost))
p1 + geom_point(aes(color = Home.Value)) +
geom_line(aes(y = pred.SC))
p1 +
geom_text(aes(label=State), size = 3)
dat <- read_csv("dataSets/EconomistData.csv")
View(dat)
ggplot(dat, aes(x = CPI, y = HDI)) +
geom_point()
ggplot(dat, aes(x = CPI, y = HDI)) +
geom_point(color = "blue")
ggplot(dat, aes(x = CPI, y = HDI)) +
geom_point(aes(color = Region))
p <- ggplot(dat,
mapping = aes(x = CPI, y = HDI)) +
geom_smooth(mapping = aes(linetype = "r2"),
method = "lm",
formula = y ~ x + log(x), se = FALSE,
color = "red") +
geom_point(mapping = aes(color = Region),
shape = 1,
size = 4,
stroke = 1.5) +
geom_text_repel(mapping = aes(label = Country, alpha = labels),
color = "gray20",
data = transform(dat,
labels = Country %in% c("Russia",
"Venezuela",
"Iraq",
"Mayanmar",
"Sudan",
"Afghanistan",
"Congo",
"Greece",
"Argentinia",
"Italy",
"Brazil",
"India",
"China",
"South Africa",
"Spain",
"Cape Verde",
"Bhutan",
"Rwanda",
"France",
"Botswana",
"France",
"US",
"Germany",
"Britain",
"Barbados",
"Japan",
"Norway",
"New Zealand",
"Sigapore"))) +
scale_x_continuous(name = "Corruption Perception Index, 2011 (10=least corrupt)",
limits = c(1.0, 10.0),
breaks = 1:10) +
scale_y_continuous(name = "Human Development Index, 2011 (1=best)",
limits = c(0.2, 1.0),
breaks = seq(0.2, 1.0, by = 0.1)) +
scale_color_manual(name = "",
values = c("#24576D",
"#099DD7",
"#28AADC",
"#248E84",
"#F2583F",
"#96503F"),
guide = guide_legend(nrow = 1, order=1)) +
scale_alpha_discrete(range = c(0, 1),
guide = FALSE) +
scale_linetype(name = "",
breaks = "r2",
labels = list(bquote(R^2==.(mR2))),
guide = guide_legend(override.aes = list(linetype = 1, size = 2, color = "red"), order=2)) +
ggtitle("Corruption and human development") +
labs(caption="Sources: Transparency International; UN Human Development Report") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
text = element_text(color = "gray20"),
axis.title.x = element_text(face="italic"),
axis.title.y = element_text(face="italic"),
legend.position = "top",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.text = element_text(size = 12),
plot.caption = element_text(hjust=0),
plot.title = element_text(size = 16, face = "bold"))
p <- ggplot(dat,
mapping = aes(x = CPI, y = HDI)) +
geom_smooth(mapping = aes(linetype = "r2"),
method = "lm",
formula = y ~ x + log(x), se = FALSE,
color = "red") +
geom_point(mapping = aes(color = Region),
shape = 1,
size = 4,
stroke = 1.5) +
geom_label_repel(mapping = aes(label = Country, alpha = labels),
color = "gray20",
data = transform(dat,
labels = Country %in% c("Russia",
"Venezuela",
"Iraq",
"Mayanmar",
"Sudan",
"Afghanistan",
"Congo",
"Greece",
"Argentinia",
"Italy",
"Brazil",
"India",
"China",
"South Africa",
"Spain",
"Cape Verde",
"Bhutan",
"Rwanda",
"France",
"Botswana",
"France",
"US",
"Germany",
"Britain",
"Barbados",
"Japan",
"Norway",
"New Zealand",
"Sigapore"))) +
scale_x_continuous(name = "Corruption Perception Index, 2011 (10=least corrupt)",
limits = c(1.0, 10.0),
breaks = 1:10) +
scale_y_continuous(name = "Human Development Index, 2011 (1=best)",
limits = c(0.2, 1.0),
breaks = seq(0.2, 1.0, by = 0.1)) +
scale_color_manual(name = "",
values = c("#24576D",
"#099DD7",
"#28AADC",
"#248E84",
"#F2583F",
"#96503F"),
guide = guide_legend(nrow = 1, order=1)) +
scale_alpha_discrete(range = c(0, 1),
guide = FALSE) +
scale_linetype(name = "",
breaks = "r2",
labels = list(bquote(R^2==.(mR2))),
guide = guide_legend(override.aes = list(linetype = 1, size = 2, color = "red"), order=2)) +
ggtitle("Corruption and human development") +
labs(caption="Sources: Transparency International; UN Human Development Report") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
text = element_text(color = "gray20"),
axis.title.x = element_text(face="italic"),
axis.title.y = element_text(face="italic"),
legend.position = "top",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.text = element_text(size = 12),
plot.caption = element_text(hjust=0),
plot.title = element_text(size = 16, face = "bold"))
#' OK, now that we've calculated the values, let's think about how to get them on the graph. ggplot2 has an `annotate` function, but this is not convenient for adding elements outside the plot area. The `grid` package has nice functions for doing this, so we'll use those.
#'
#' And here it is, our final version!
library(ggrepel)
install.packages('ggrepel')
#' OK, now that we've calculated the values, let's think about how to get them on the graph. ggplot2 has an `annotate` function, but this is not convenient for adding elements outside the plot area. The `grid` package has nice functions for doing this, so we'll use those.
#'
#' And here it is, our final version!
library(ggrepel)
p <- ggplot(dat,
mapping = aes(x = CPI, y = HDI)) +
geom_smooth(mapping = aes(linetype = "r2"),
method = "lm",
formula = y ~ x + log(x), se = FALSE,
color = "red") +
geom_point(mapping = aes(color = Region),
shape = 1,
size = 4,
stroke = 1.5) +
geom_text_repel(mapping = aes(label = Country, alpha = labels),
color = "gray20",
data = transform(dat,
labels = Country %in% c("Russia",
"Venezuela",
"Iraq",
"Mayanmar",
"Sudan",
"Afghanistan",
"Congo",
"Greece",
"Argentinia",
"Italy",
"Brazil",
"India",
"China",
"South Africa",
"Spain",
"Cape Verde",
"Bhutan",
"Rwanda",
"France",
"Botswana",
"France",
"US",
"Germany",
"Britain",
"Barbados",
"Japan",
"Norway",
"New Zealand",
"Sigapore"))) +
scale_x_continuous(name = "Corruption Perception Index, 2011 (10=least corrupt)",
limits = c(1.0, 10.0),
breaks = 1:10) +
scale_y_continuous(name = "Human Development Index, 2011 (1=best)",
limits = c(0.2, 1.0),
breaks = seq(0.2, 1.0, by = 0.1)) +
scale_color_manual(name = "",
values = c("#24576D",
"#099DD7",
"#28AADC",
"#248E84",
"#F2583F",
"#96503F"),
guide = guide_legend(nrow = 1, order=1)) +
scale_alpha_discrete(range = c(0, 1),
guide = FALSE) +
scale_linetype(name = "",
breaks = "r2",
labels = list(bquote(R^2==.(mR2))),
guide = guide_legend(override.aes = list(linetype = 1, size = 2, color = "red"), order=2)) +
ggtitle("Corruption and human development") +
labs(caption="Sources: Transparency International; UN Human Development Report") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
text = element_text(color = "gray20"),
axis.title.x = element_text(face="italic"),
axis.title.y = element_text(face="italic"),
legend.position = "top",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.text = element_text(size = 12),
plot.caption = element_text(hjust=0),
plot.title = element_text(size = 16, face = "bold"))
mR2 <- summary(lm(HDI ~ CPI + log(CPI), data = dat))$r.squared
mR2 <- paste0(format(mR2, digits = 2), "%")
p <- ggplot(dat,
mapping = aes(x = CPI, y = HDI)) +
geom_smooth(mapping = aes(linetype = "r2"),
method = "lm",
formula = y ~ x + log(x), se = FALSE,
color = "red") +
geom_point(mapping = aes(color = Region),
shape = 1,
size = 4,
stroke = 1.5) +
geom_text_repel(mapping = aes(label = Country, alpha = labels),
color = "gray20",
data = transform(dat,
labels = Country %in% c("Russia",
"Venezuela",
"Iraq",
"Mayanmar",
"Sudan",
"Afghanistan",
"Congo",
"Greece",
"Argentinia",
"Italy",
"Brazil",
"India",
"China",
"South Africa",
"Spain",
"Cape Verde",
"Bhutan",
"Rwanda",
"France",
"Botswana",
"France",
"US",
"Germany",
"Britain",
"Barbados",
"Japan",
"Norway",
"New Zealand",
"Sigapore"))) +
scale_x_continuous(name = "Corruption Perception Index, 2011 (10=least corrupt)",
limits = c(1.0, 10.0),
breaks = 1:10) +
scale_y_continuous(name = "Human Development Index, 2011 (1=best)",
limits = c(0.2, 1.0),
breaks = seq(0.2, 1.0, by = 0.1)) +
scale_color_manual(name = "",
values = c("#24576D",
"#099DD7",
"#28AADC",
"#248E84",
"#F2583F",
"#96503F"),
guide = guide_legend(nrow = 1, order=1)) +
scale_alpha_discrete(range = c(0, 1),
guide = FALSE) +
scale_linetype(name = "",
breaks = "r2",
labels = list(bquote(R^2==.(mR2))),
guide = guide_legend(override.aes = list(linetype = 1, size = 2, color = "red"), order=2)) +
ggtitle("Corruption and human development") +
labs(caption="Sources: Transparency International; UN Human Development Report") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
text = element_text(color = "gray20"),
axis.title.x = element_text(face="italic"),
axis.title.y = element_text(face="italic"),
legend.position = "top",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.text = element_text(size = 12),
plot.caption = element_text(hjust=0),
plot.title = element_text(size = 16, face = "bold"))
p
